{"version":3,"sources":["components/Nav/images/logo.png","components/Spinner/images/pizzaAnimation.gif","logo.svg","components/Nav/Nav.js","components/Footer/Footer.js","components/Spinner/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","id","className","src","Logo","alt","exact","activeClassName","to","pathname","width","Component","Footer","class","frameborder","scrolling","marginheight","marginwidth","href","Spinner","im","Home","React","lazy","App","Suspense","fallback","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,4ECA3CD,EAAOC,QAAU,IAA0B,kC,8KCStBC,E,iLAGb,OACI,4BAAQC,GAAG,cAAcC,UAAU,eACnC,yBAAKA,UAAU,gBACZ,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,sCAWX,yBAAKA,UAAU,QACf,yBAAKD,GAAG,cACH,yBAAKE,IAAKC,IAAMC,IAAI,sBAEzB,wBAAIJ,GAAG,OAEH,4BAAI,4BACA,kBAAC,IAAD,CAASK,OAAK,EACLC,gBAAgB,cAChBC,GAAI,CACDC,SAAU,UAHtB,UASJ,4BAAI,4BACA,kBAAC,IAAD,CAASH,OAAK,EACLC,gBAAgB,cAChBC,GAAI,CACDC,SAAU,MAEb,yBAAKN,IAAKC,IAAMC,IAAI,mBAAmBK,MAAM,UAItD,4BACI,4BAEA,kBAAC,IAAD,CAAUF,GAAI,CACVC,SAAU,SAEbH,OAAK,EACLC,gBAAgB,eAJjB,oBA0BxB,yBAAKN,GAAG,uB,GA3EcU,aCJZC,G,uLAIb,OAEQ,4BAAQX,GAAG,SAASC,UAAU,eAG9B,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,oBAIf,yBAAKW,MAAM,YAAW,yBAAKA,MAAM,eAAc,4BAASZ,GAAG,cAAcE,IAAI,yGAAyGW,YAAY,IAAIC,UAAU,KAAKC,aAAa,IAAIC,YAAY,MAAa,uBAAGC,KAAK,yCAW/Q,yBAAKhB,UAAU,iCACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,yBAAf,uBACqB,uBAAGgB,KAAK,KAAR,gC,GAjCTP,c,iBCFfQ,E,iLAEjB,OACI,yBAAKhB,IAAKiB,U,GAHmBT,aCK/BU,G,MAAOC,IAAMC,MAAK,kBAAM,iCAkBfC,MAjBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAAC,EAAD,OAC5B,yBAAKxB,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOI,OAAK,EAACqB,KAAK,eAAeC,UAAWP,IAE5C,kBAAC,EAAD,UCNcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.45cf2506.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.825e41e9.png\";","module.exports = __webpack_public_path__ + \"static/media/pizzaAnimation.42218fc6.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport Logo from './images/logo.png';\n\n//import Menu from './images/menu/menu.png';\n\nimport { Link, NavLink } from 'react-router-dom'\n\n\n\nexport default class Nav extends Component {\n\n    render() {\n        return (\n            <header id=\"site-header\" className=\"header-area\">\n            <div className=\"header-inner\">\n               <div className=\"container-fluid\">\n               <div className=\"row\">\n                   <div className=\"col\">\n                   <div className=\"logo-menu-wrap hidden-xs hidden-sm\">\n                       {/* <div className=\"logo\">\n                       <Link  to={{\n                           pathname: '/'\n                       }}>\n                           <img src={Logo} alt=\"logo\" width='80' />\n                       </Link>\n                       </div> */}\n\n\n\n                       <nav className=\"menu\">\n                       <div id='logoMobile'>\n                            <img src={Logo} alt=\"MIMIS PIZZA logo\"  />\n                        </div>    \n                       <ul id=\"nav\">\n                          \n                           <li><h1>\n                               <NavLink exact \n                                        activeClassName=\"active-link\"\n                                        to={{\n                                           pathname: '/menu'\n                                       }}>\n                                       MENU\n                               </NavLink>\n                               </h1>\n                           </li>\n                           <li><h1>\n                               <NavLink exact \n                                        activeClassName=\"active-link\"\n                                        to={{\n                                           pathname: '/'\n                                       }}>\n                                        <img src={Logo} alt=\"MIMIS PIZZA logo\" width='80' />\n                               </NavLink>\n                               </h1>\n                           </li>\n                               <li>\n                                   <h1>\n\n                                   <NavLink  to={{\n                                       pathname: '/call'\n                                    }}\n                                    exact \n                                    activeClassName=\"active-link\"\n                                    >\n                                           CONTACT\n                                   </NavLink>\n                                    </h1>\n                               </li>\n                          \n\n                          \n\n                           \n                          \n                          \n                          \n                       </ul>\n                       </nav>\n                      \n                   </div>\n                   </div>\n               </div>\n               </div>\n           </div>\n           <div id=\"sticky-header\"></div>\n                              \n            {/* <div className=\"mobile-menu\">\n                 <a className=\"mobile-logo\" href=\"/\"><img src={Logo} alt=\"logo\" />\n\n    \n\n                 </a>   \n\n                 \n\n            </div> */}\n            </header>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n// import { FaInstagram, FaFacebook, FaTwitter } from 'react-icons/fa';\n\n\nexport default class Footer extends Component {\n\n\n    render() {\n        return (\n\n                <footer id=\"footer\" className=\"site-footer\">\n     \n                {/* Start footer widgets area */}\n                <div className=\"footer-widgets-area\">\n                    <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      \n                        <div className=\"col-lg-12 footer\">\n                      \n\n                      \n                        <div class=\"mapouter\"><div class=\"gmap_canvas\"><iframe  id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=217%20east%2086th%20st%20new%20york&t=&z=13&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe><a href=\"https://www.embedgooglemap.net\"></a></div></div>\n\n                       \n                        </div>{/*/.col-lg-13*/}\n\n         \n\n                    </div>{/*/.row*/}\n                    </div>{/*/.container*/}\n                </div>{/* End footer widgets area */}\n                {/* Start footer copyright area */}\n                <div className=\"footer-copyright-area bg-gray\">\n                    <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                        <div className=\"copyright text-center\">\n                            Â© Copyrighted by <a href=\"/\">MIMI'S PIZZA 2020.</a> \n                        </div>\n                        </div>\n                    </div>{/*/.row*/}\n                    </div>{/*/.container*/}\n                </div>{/*End footer copyright area */}\n                </footer>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport im from './images/pizzaAnimation.gif';\n\nexport default class Spinner extends Component {\nrender() {\n    return (\n        <img src={im}></img>\n    )\n}\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Nav from './components/Nav/Nav'\nimport logo from './logo.svg';\nimport Footer from './components/Footer/Footer'\nimport Spinner from './components/Spinner/Spinner'\nimport './App.css';\n\nconst Home = React.lazy(() => import('./components/Home/Home'))\nfunction App() {\n  return (\n    <Router>\n      <React.Suspense fallback={<Spinner />}>\n    <div className=\"App\">\n      <Nav/>\n      {/* chage the path for the deployed version in github pages */}\n      <Route exact path='/mimiz-pizza' component={Home} />\n      \n      <Footer />\n      \n    </div>\n    </React.Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}